name: pr-auto
description: Automatically generate PR descriptions using LLMs
author: Vladimir Blagojevic
branding:
  icon: edit-2
  color: blue
inputs:
  openai_api_key:
    description: OpenAI API key
    required: true
  openai_base_url:
    description: OpenAI Base URL
    required: false
    default: https://api.openai.com/v1
  github_token:
    description: GITHUB_TOKEN or a repo scoped PAT
    default: ${{ github.token }}
  github_repository:
    description: GitHub repository
    default: ${{ github.repository }}
  base_branch:
    description: Base (target) branch
    default: ${{ github.event.pull_request.base.ref }}
  head_branch:
    description: Head (source) branch
    default: ${{ github.event.pull_request.head.ref }}
  generation_model:
    description: LLM to use for PR text generation
    default: gpt-4o
  function_calling_model:
    description: LLM to use for function calling (service parameter resolution, output formatting)
    default: gpt-3.5-turbo
  system_prompt:
    description: System message/prompt to help the model generate PR description (prompt text or URL where prompt text can be found)
    default: https://bit.ly/pr_auto_system
    required: false
  user_prompt:
    description: Additional prompt to help the model generate PR description
    required: false
  bot_name:
    description: The name of the bot so users can guide PR description generation with @bot_name from PR comments
    default: pr-auto-bot

outputs:
  pr-text:
    description: PR description text

runs:
  using: 'docker'
  image: 'docker://vblagoje/openapi-rag-service:latest'
  env:
    OPENAI_API_KEY: ${{ inputs.openai_api_key }}
    OPENAI_BASE_URL: ${{ inputs.openai_base_url }}
    GITHUB_REPOSITORY: ${{ inputs.github_repository }}
    BASE_REF: ${{ inputs.base_branch }}
    HEAD_REF: ${{ inputs.head_branch }}
    TEXT_GENERATION_MODEL: ${{ inputs.generation_model }}
    FUNCTION_CALLING_MODEL: ${{ inputs.function_calling_model }}
    SYSTEM_PROMPT: ${{ inputs.system_prompt }}
    USER_PROMPT: ${{ inputs.user_prompt }}
    FUNCTION_CALLING_PROMPT: Compare branches ${{ inputs.base_branch }} (BASE) and ${{ inputs.head_branch }} (HEAD), in GitHub repository ${{ inputs.github_repository }} (owner/repo)
    FUNCTION_CALLING_VALIDATION_SCHEMA: https://bit.ly/github_compare_branches_full_schema
    BOT_NAME: ${{ inputs.bot_name }}
    OPENAPI_SERVICE_SPEC: https://bit.ly/github_compare
    OPENAPI_SERVICE_TOKEN: ${{ inputs.github_token }}
    SERVICE_RESPONSE_SUBTREE: files
    OUTPUT_KEY: pr-text
